{"version":3,"file":"static/js/464.41288fb3.chunk.js","mappings":"qJAqCA,UA9BgB,SAAH,GAA4B,IAAtBA,EAAO,EAAPA,QAMjB,OALAC,EAAAA,EAAAA,YAAU,WACKC,SAASC,KAAKC,MAAMC,SAA7BL,EAAwC,SACR,MACtC,GAAG,CAACA,KAGF,SAAC,WAAc,UACZA,IACC,gBACEI,MAAO,CACLE,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,IACRC,WAAY,QACZ,UAEF,iBAAKC,UAAU,eAAc,WAC3B,gBAAKC,IAAKC,EAAMC,IAAI,eACpB,iBAAMH,UAAU,iBAM5B,C,6zBCUA,EAjCmB,SAAH,GAAkD,IAA5CI,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MACtCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,qBACET,UACEO,EAAQ,+BAAiC,wBAC1C,WAED,SAAC,KAAI,CAACG,GAAG,IAAG,6BACZ,gBAAKT,IAAKU,EAAYR,IAAI,GAAGP,MAAM,KAAKC,OAAO,OAC9CO,IAAUC,IAAS,0BAAOD,IAC1BA,GAASC,IACR,UAAC,WAAc,YACb,2BACE,cACEO,QAAS,WACOJ,EAAVF,IACW,EACjB,EAAE,SAEDF,OAGL,gBAAKH,IAAKU,EAAYR,IAAI,GAAGP,MAAM,KAAKC,OAAO,QAC/C,0BAAOQ,WAMnB,C,4KCqHA,UA1Ic,WACZ,IAAMG,GAAWC,EAAAA,EAAAA,MACXI,GAAWC,EAAAA,EAAAA,MAETC,GADOC,EAAAA,EAAAA,MACPD,IAER,GAA8BE,EAAAA,EAAAA,UAAwB,IAAG,eAAlDC,EAAO,KAAEC,EAAU,KAC1B,GAAoCF,EAAAA,EAAAA,UAAc,CAAC,GAAE,eAA9CG,EAAU,KAAEC,EAAa,KAChC,GAA8BJ,EAAAA,EAAAA,WAAkB,GAAK,eAA9C9B,EAAO,KAAEmC,EAAU,KAC1B,GAA8BL,EAAAA,EAAAA,UAAc,CAC1CM,KAAM,IACN,eAFKC,EAAO,KAAEC,EAAU,MAI1BrC,EAAAA,EAAAA,YAAU,WACRsC,GACF,GAAG,CAACX,KAEJ3B,EAAAA,EAAAA,YAAU,WACRsC,GACF,GAAG,CAACF,IAEJ,IAAME,EAAU,WACd,IAAIC,EAAS,CACXC,OAAQC,KAAKC,UAAU,CACrBC,OAAQ,EACRC,UAAW,EACXjB,IAAKA,GAAO,GACZkB,WAAYlB,EAAM,GAAK,IAEzBmB,MAAOL,KAAKC,UAAU,CA/BV,GA+BkB,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASD,MA/BpB,KA+ByD,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASD,QACvEY,KAAMN,KAAKC,UAAU,CAAC,YAAa,SACnCM,WAAY,6CAGdvB,EAAS,CACPwB,KAAM,gBACNC,QAASX,EACTY,SAAU,SAACC,GAET,GADAlB,GAAW,GACJ,OAAHkB,QAAG,IAAHA,GAAAA,EAAKC,QAAS,CAChB,MAEID,EADFE,QAAWC,EAAI,EAAJA,KAAMvB,EAAU,EAAVA,WAEnBD,EAAWwB,GAEXtB,EAAcD,EAChB,CACF,GAEJ,EAEMwB,EAAkB,SAACC,GACvB,OAAQA,GACN,KAAK,EACH,MAAO,cACT,KAAK,EACH,MAAO,cACT,KAAK,EACH,MAAO,gBACT,KAAK,EACH,MAAO,eACT,QACE,MAAO,eAEb,EAEA,OACE,iCACE,SAAC,IAAU,CAACzC,MAAO,kBACnB,oBAASJ,UAAU,0BAAyB,UAC1C,UAAC,IAAG,CAAC8C,OAAQ,CAAC,GAAI,IAAI,WACpB,SAAC,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIlD,UAAU,qBAAoB,UACjE,UAAC,IAAG,CAAC8C,OAAQ,CAAC,GAAI,IAAI,UACZ,OAAP5B,QAAO,IAAPA,OAAO,EAAPA,EAASiC,KAAI,SAACC,EAAMP,GAAK,aACxB,SAAC,IAAG,CAACE,GAAc,IAAVF,EAAc,GAAK,GAAIG,GAAc,IAAVH,EAAc,GAAK,GAAII,GAAc,IAAVJ,EAAc,GAAK,GAAIK,GAAI,GAAG,UAC3F,iBAAKlD,UAAqB,IAAV6C,EAAc,gBAAkB,UAAU,WACxD,iBACE7C,UAAU,YACVY,QAAS,WACPJ,EAAS,YAAD,OAAiB,OAAJ4C,QAAI,IAAJA,OAAI,EAAJA,EAAMrC,KAC7B,EACAxB,MAAO,CAAE8D,OAAQ,WAAY,WAE7B,gBAAKpD,IAAG,UAtFZqD,2CAsF0B,OAAO,OAAJF,QAAI,IAAJA,GAAY,QAAR,EAAJA,EAAMG,cAAM,WAAR,EAAJ,EAAcC,MAAM,KAAK,IAAMrD,IAAS,OAAJiD,QAAI,IAAJA,OAAI,EAAJA,EAAMK,SACnE,gBAAKzD,UAAU,gBAGjB,iBAAKA,UAAU,UAAS,WACtB,SAAC,KAAI,CAACU,GAAE,mBAAkB,OAAJ0C,QAAI,IAAJA,OAAI,EAAJA,EAAMrC,KAAOf,UAAU,gBAAe,SACrD,OAAJoD,QAAI,IAAJA,OAAI,EAAJA,EAAMK,SAET,cAAGzD,UAAU,OAAM,SAAE0D,IAAW,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,WAAWC,OAAO,iBACpD,cAAG5D,UAAU,4BAA2B,SAAM,OAAJoD,QAAI,IAAJA,OAAI,EAAJA,EAAMS,qBAlBiD,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,GAqBnG,KAGA,OAAP5C,QAAO,IAAPA,OAAO,EAAPA,EAAS6C,QAAS,IACjB,SAAC,IAAG,CAAChB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,UAClC,SAAC,IAAU,CACTc,eAA0B,OAAV5C,QAAU,IAAVA,OAAU,EAAVA,EAAY6C,QAC5BC,KAAK,UACLC,SAzGF,EA0GEC,MAAiB,OAAVhD,QAAU,IAAVA,OAAU,EAAVA,EAAYgD,MACnBpE,UAAU,iBACVqE,SAAU,SAAC9C,GAAI,OAAKE,GAAW,kBAAKD,GAAO,IAAED,KAAMA,IAAO,YAMpE,SAAC,IAAG,CAACwB,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAG,UAChC,iBAAKlD,UAAU,WAAU,WACvB,eAAGA,UAAU,sBAAqB,0BAAU,IAAG,yBAC/C,gBAAKA,UAAU,aACf,gBAAKA,UAAU,eAAc,SACnB,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASiC,KAAI,SAACC,EAAMP,GAAK,OACxB,iBAAK7C,UAAW4C,EAAgBC,GAAO,WACrC,gBAAK7C,UAAU,eACf,iBAAKA,UAAU,UAAS,WACtB,SAAC,KAAI,CAACU,GAAE,mBAAkB,OAAJ0C,QAAI,IAAJA,OAAI,EAAJA,EAAMrC,KAAOf,UAAU,gBAAe,SACrD,OAAJoD,QAAI,IAAJA,OAAI,EAAJA,EAAMK,SAET,eAAGzD,UAAU,OAAM,qCAAa0D,IAAW,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,WAAWC,OAAO,sBAE7D,iBAOlB,SAAC,UAAO,CAACzE,QAASA,MAGxB,C","sources":["components/Extended/Loading.tsx","layout/MewShop/BreadCrumb.tsx","pages/MewShop/Article/index.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport logo from \"static/MewShop/images/home/logo.png\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n}\r\n\r\nconst Loading = ({ loading }: Props) => {\r\n  useEffect(() => {\r\n    if (loading) document.body.style.overflow = \"hidden\";\r\n    else document.body.style.overflow = \"auto\";\r\n  }, [loading]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 100000,\r\n            background: \"#fff\",\r\n          }}\r\n        >\r\n          <div className=\"loading__box\">\r\n            <img src={logo} alt=\"logo page\" />\r\n            <span className=\"loader\"></span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport rightArraw from \"static/MewShop/images/home/right-arrow.png\";\r\n\r\ninterface Props {\r\n  node1?: string;\r\n  node2?: string;\r\n  urlNode1?: any;\r\n  type2?: boolean;\r\n}\r\n\r\nconst BreadCrumb = ({ node1, node2, urlNode1, type2 }: Props) => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <section\r\n        className={\r\n          type2 ? \"bread_crumb type_2 container\" : \"bread_crumb container\"\r\n        }\r\n      >\r\n        <Link to=\"/\">Trang chủ</Link>\r\n        <img src={rightArraw} alt=\"\" width=\"12\" height=\"12\" />\r\n        {node1 && !node2 && <span>{node1}</span>}\r\n        {node1 && node2 && (\r\n          <React.Fragment>\r\n            <span>\r\n              <a\r\n                onClick={() => {\r\n                  if (urlNode1) navigate(urlNode1);\r\n                  else navigate(-1);\r\n                }}\r\n              >\r\n                {node1}\r\n              </a>\r\n            </span>\r\n            <img src={rightArraw} alt=\"\" width=\"12\" height=\"12\" />\r\n            <span>{node2}</span>\r\n          </React.Fragment>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumb;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n// THIRD IMPORT\r\nimport { useState, useEffect } from 'react';\r\nimport BreadCrumb from 'layout/MewShop/BreadCrumb';\r\nimport { Pagination, Row, Col, Switch } from 'antd';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n// PROJECT IMPORT\r\nimport Loading from 'components/Extended/Loading';\r\nimport article1 from 'static/MewShop/images/home/articles-1.jpg';\r\nimport article2 from 'static/MewShop/images/home/articles-2.jpg';\r\nimport article3 from 'static/MewShop/images/home/articles-3.jpeg';\r\nimport article4 from 'static/MewShop/images/home/articles-4.jpg';\r\n\r\n// TYPES IMPORT\r\nimport { ArticleType } from 'types/articles';\r\n\r\nconst END_POINT = process.env.REACT_APP_SERVER;\r\nconst PAGE_SIZE = 5;\r\n\r\nconst Index = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const { url } = params;\r\n\r\n  const [article, setArticle] = useState<ArticleType[]>([]);\r\n  const [pagination, setPagination] = useState<any>({});\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [filters, setFilters] = useState<any>({\r\n    page: 1\r\n  });\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, [filters]);\r\n\r\n  const getList = () => {\r\n    let params = {\r\n      filter: JSON.stringify({\r\n        status: 1,\r\n        websiteId: 1,\r\n        url: url || '',\r\n        categoryId: url ? '' : 8\r\n      }),\r\n      range: JSON.stringify([filters?.page * PAGE_SIZE - PAGE_SIZE, filters?.page * PAGE_SIZE]),\r\n      sort: JSON.stringify(['createdAt', 'DESC']),\r\n      attributes: 'id,title,images,description,createdAt,url'\r\n    };\r\n\r\n    dispatch({\r\n      type: 'article/fetch',\r\n      payload: params,\r\n      callback: (res) => {\r\n        setLoading(false);\r\n        if (res?.success) {\r\n          const {\r\n            results: { list, pagination }\r\n          } = res;\r\n          setArticle(list);\r\n\r\n          setPagination(pagination);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const renderClassName = (index: number) => {\r\n    switch (index) {\r\n      case 0:\r\n        return 'article one';\r\n      case 1:\r\n        return 'article two';\r\n      case 2:\r\n        return 'article three';\r\n      case 3:\r\n        return 'article four';\r\n      default:\r\n        return 'article five';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumb node1={'Tin tức'} />\r\n      <section className=\"articles_page container\">\r\n        <Row gutter={[32, 32]}>\r\n          <Col xl={16} lg={16} md={24} xs={24} className=\"articles_container\">\r\n            <Row gutter={[32, 32]}>\r\n              {article?.map((item, index) => (\r\n                <Col xl={index === 0 ? 24 : 12} lg={index === 0 ? 24 : 12} md={index === 0 ? 24 : 12} xs={24} key={item?.id}>\r\n                  <div className={index === 0 ? 'article first' : 'article'}>\r\n                    <div\r\n                      className=\"image_box\"\r\n                      onClick={() => {\r\n                        navigate(`/article/${item?.url}`);\r\n                      }}\r\n                      style={{ cursor: 'pointer' }}\r\n                    >\r\n                      <img src={`${END_POINT}${item?.images?.split(',')[0]}`} alt={item?.title} />\r\n                      <div className=\"overlay\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"content\">\r\n                      <Link to={`/article/${item?.url}`} className=\"article_title\">\r\n                        {item?.title}\r\n                      </Link>\r\n                      <p className=\"date\">{moment(item?.createdAt).format('DD/MM/YYYY')}</p>\r\n                      <p className=\"article_short_description\">{item?.description}</p>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n\r\n              {article?.length > 0 && (\r\n                <Col xl={24} lg={24} md={24} xs={24}>\r\n                  <Pagination\r\n                    defaultCurrent={pagination?.current}\r\n                    size=\"default\"\r\n                    pageSize={PAGE_SIZE}\r\n                    total={pagination?.total}\r\n                    className=\"paginationPage\"\r\n                    onChange={(page) => setFilters({ ...filters, page: page })}\r\n                  />\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Col>\r\n          <Col xl={8} lg={8} md={24} xs={24}>\r\n            <div className=\"part_one\">\r\n              <p className=\"articles_page_title\">Tin tức {'&'} sự kiện</p>\r\n              <div className=\"divider\"></div>\r\n              <div className=\"articles_box\">\r\n                {article?.map((item, index) => (\r\n                  <div className={renderClassName(index)}>\r\n                    <div className=\"image_box\"></div>\r\n                    <div className=\"content\">\r\n                      <Link to={`/article/${item?.url}`} className=\"article_title\">\r\n                        {item?.title}\r\n                      </Link>\r\n                      <p className=\"date\">Ngày đăng: {moment(item?.createdAt).format('DD/MM/YYYY')}</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </section>\r\n      <Loading loading={loading} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["loading","useEffect","document","body","style","overflow","position","top","left","width","height","zIndex","background","className","src","logo","alt","node1","node2","urlNode1","type2","navigate","useNavigate","to","rightArraw","onClick","dispatch","useDispatch","url","useParams","useState","article","setArticle","pagination","setPagination","setLoading","page","filters","setFilters","getList","params","filter","JSON","stringify","status","websiteId","categoryId","range","sort","attributes","type","payload","callback","res","success","results","list","renderClassName","index","gutter","xl","lg","md","xs","map","item","cursor","process","images","split","title","moment","createdAt","format","description","id","length","defaultCurrent","current","size","pageSize","total","onChange"],"sourceRoot":""}